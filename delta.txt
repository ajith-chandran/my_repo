import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.StreamSupport;

public class WirelessAmendOrderCommandHelper {

    private final ObjectMapper objectMapper = new ObjectMapper();

    public Map<String, List<String>> extractProductIdsGroupedByStatus(SuccessActions promotionsAction) {
        try {
            // Parse the JSON string returned from getData()
            JsonNode data = objectMapper.readTree((String) promotionsAction.getData());

            // Navigate to immediatePromotion
            JsonNode immediatePromotions = data
                    .path("promotions")
                    .path("promotionQualification")
                    .path("immediatePromotion");

            // Check it's an array
            if (!immediatePromotions.isArray()) {
                return Collections.emptyMap();
            }

            // Process and group by status
            return StreamSupport.stream(immediatePromotions.spliterator(), false)
                    .filter(promo -> promo.hasNonNull("id") && promo.hasNonNull("status"))
                    .collect(Collectors.groupingBy(
                            promo -> promo.get("status").asText(),
                            Collectors.mapping(promo -> promo.get("id").asText(), Collectors.toList())
                    ));

        } catch (Exception e) {
            // Log or rethrow as needed
            e.printStackTrace();
            return Collections.emptyMap();
        }
    }
}